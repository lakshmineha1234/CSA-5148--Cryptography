#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to encrypt the plaintext using Caesar Cipher
void caesarCipher(char* plaintext, int k) {
    int i;
    char ch;

    // Traverse the plaintext
    for (i = 0; plaintext[i] != '\0'; ++i) {
        ch = plaintext[i];

        // Encrypt uppercase letters
        if (isupper(ch)) {
            ch = (ch + k - 'A') % 26 + 'A';
        }
        // Encrypt lowercase letters
        else if (islower(ch)) {
            ch = (ch + k - 'a') % 26 + 'a';
        }

        plaintext[i] = ch;
    }
}

int main() {
    char plaintext[100];
    int k;

    // Get the plaintext and the shift value
    printf("Enter a plaintext string: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = 0; // Remove newline character from the input

    printf("Enter the shift value (1-25): ");
    scanf("%d", &k);

    // Validate the shift value
    if (k < 1 || k > 25) {
        printf("Invalid shift value. Please enter a value between 1 and 25.\n");
        return 1;
    }

    // Encrypt the plaintext
    caesarCipher(plaintext, k);

    // Output the encrypted string
    printf("Encrypted string: %s\n", plaintext);

    return 0;
}
