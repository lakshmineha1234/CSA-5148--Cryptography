#include <stdio.h>
#include <string.h>
#include <ctype.h>
void decryptSimpleSubstitution(char* ciphertext) {
    char mapping[128];
    for (int i = 0; i < 128; ++i) {
        mapping[i] = '?';
    }
    mapping['5'] = 't';
    mapping['3'] = 'h';
    mapping['†'] = 'e';
    mapping['6'] = 'a';
    mapping['8'] = 'o';
    mapping['4'] = 'i';
    mapping['0'] = 'n';
    mapping[')'] = 's';
    mapping['1'] = 'r';
    mapping[';'] = 'd';
    mapping['9'] = 'l';
    mapping['('] = 'c';
    mapping['8'] = 'm';
    mapping['2'] = 'u';
    mapping['—'] = 'y';
    mapping['?'] = 'p';
    int len = strlen(ciphertext);
    for (int i = 0; i < len; ++i) {
        if (isalnum(ciphertext[i])) {
            ciphertext[i] = mapping[ciphertext[i]];
        }
    }
}
int main() {
    char ciphertext[] = "53‡‡†305))6*;4826)4‡.)4‡);806*;48†8¶60))85;;]8*;:‡*8†83 \
                        (88)5*†;46(;88*96*?;8)*‡(;485);5*†2:*‡(;4956*2(5*—4)8¶8* \
                        ;4069285);)6†8)4‡‡;1(‡9;48081;8:8‡1;48†85;4)485†528806*81 (‡9;48;(88;4(‡?34;48)4‡;161;:188;‡?;";
    decryptSimpleSubstitution(ciphertext);
    printf("Decrypted message:\n%s\n", ciphertext);
    return 0;
}
